# Rate limiting zones for membership-system (using unique names)
limit_req_zone $binary_remote_addr zone=membership_system_api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=membership_system_auth:10m rate=5r/m;

# Upstream configuration
upstream membership_system_backend {
    least_conn;
    server 127.0.0.1:5173 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name member.ringing.org.uk *.member.ringing.org.uk;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server block with wildcard SSL
server {
    listen 443 ssl http2;
    server_name member.ringing.org.uk *.member.ringing.org.uk;
    
    # SSL Configuration - Wildcard Certificate (confirmed paths)
    ssl_certificate /etc/letsencrypt/live/member.ringing.org.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/member.ringing.org.uk/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA;
    ssl_prefer_server_ciphers off;
    
    # SSL Session Settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://*.supabase.co https://api.resend.com;" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    
    # Static file caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri @proxy;
    }
    
    # API rate limiting
    location /api/ {
        limit_req zone=membership_system_api burst=20 nodelay;
        limit_req_status 429;
        try_files $uri @proxy;
    }
    
    # Auth endpoints rate limiting
    location ~* /(api/auth/(signin|signup|callback)|auth) {
        limit_req zone=membership_system_auth burst=5 nodelay;
        limit_req_status 429;
        try_files $uri @proxy;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        try_files $uri @proxy;
    }
    
    # Main proxy configuration
    location / {
        try_files $uri @proxy;
    }
    
    location @proxy {
        proxy_pass http://membership_system_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Security
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to sensitive files
    location ~* \.(env|log|sql)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Redirect www to non-www (HTTPS)
server {
    listen 443 ssl http2;
    server_name www.member.ringing.org.uk;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/member.ringing.org.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/member.ringing.org.uk/privkey.pem;
    
    return 301 https://member.ringing.org.uk$request_uri;
}